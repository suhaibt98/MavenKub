---
stages:
  - build
  - dockerize
  - deploy
  - cleanup
build:
  stage: build
  tags:
    - suhaib
  before_script:
    - export COMMIT_DATE=$(git show -s --format=%cd --date=format:"%y%m%d"
      $CI_COMMIT_SHA)
    - export COMMIT_SHA=$(echo $CI_COMMIT_SHORT_SHA)
    - export NEW_VERSION="$COMMIT_DATE-$COMMIT_SHA"
    - echo "NEW_VERSION= $NEW_VERSION"
  script:
    - mvn versions:set -DnewVersion=$NEW_VERSION
    - mvn clean package
  artifacts:
    paths:
      - target/
    name: ci/cd practice
  allow_failure: false
dockerize:
  stage: dockerize
  tags:
    - suhaib
  script:
    - LAST_COMMIT_DATE=$(git log -1 --format=%cd --date=format:'%y%m%d')
    - COMMIT_HASH=$(git rev-parse --short=8 HEAD)
    - IMAGE_TAG="$LAST_COMMIT_DATE-$COMMIT_HASH"
    - IMAGE_ID=$(docker images -q | head -n 1)
    - mvn clean package
    - echo "IMAGE_TAG = $IMAGE_TAG"
    - echo "Building Docker image with tag $IMAGE_TAG"
      docker build --build-arg IMAGE_TAG=$IMAGE_TAG -t mavenproject:$IMAGE_TAG .
      if [[ "$(docker images -q mavenproject:$IMAGE_TAG 2> /dev/null)" == "" ]]; then echo "ERROR Failed to build Docker image with tag $IMAGE_TAG" exit 1 fi    # Check if the image was successfully built    
    - docker login -u suhaibtelfah -p Suhaib079??!
    - docker tag $IMAGE_ID suhaibtelfah/mavenproject:$IMAGE_TAG
    - docker push suhaibtelfah/mavenproject:$IMAGE_TAG
deploy_branch:
  stage: deploy
  script:
    - kubectl create namespace $CI_COMMIT_REF_NAME
cleanup_branch:
  stage: cleanup
  script:
    - kubectl delete namespace $CI_COMMIT_REF_NAME
